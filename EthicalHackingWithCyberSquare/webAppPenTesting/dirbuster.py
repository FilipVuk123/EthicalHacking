import argparse
import requests
import concurrent.futures

parser = argparse.ArgumentParser(description='Find existing directories on a web server', add_help=False)
parser.add_argument('targeturl', type=str, help='target URL')
parser.add_argument('file_name', type=str, help='path to file containing directory names')
parser.add_argument('--help', action='help', help='show this help message and exit')
parser.add_argument('--threads', type=int, default=4, help='number of threads to use')

args = parser.parse_args()

def request(url):
    try:
        return requests.get(url)
    except requests.exceptions.ConnectionError:
        pass

def scan_directory(directory):
    full_url = args.targeturl + '/' + directory.strip()
    response = request(full_url)
    if response:
        print('Found directory: ', full_url)

with open(args.file_name, 'r') as file:
    lines = file.readlines()

with concurrent.futures.ThreadPoolExecutor(max_workers=args.threads) as executor:
    futures = []
    for line in lines:
        future = executor.submit(scan_directory, line)
        futures.append(future)

    for future in concurrent.futures.as_completed(futures):
        pass

print('Exiting...')